# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

#      # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
#    - name: Generate Environment Variables File for Production
#      run: |
#        echo "REACT_APP_DOMAIN=$REACT_APP_DOMAIN" >> .env.production
#        echo "REACT_APP_DEBUG=$REACT_APP_DEBUG" >> .env.production
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade pip pandas
        pip install flake8 pytest
        pip install requests
        pip install slack-bolt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
     - name: Lint with flake8
       run: |
         # stop the build if there are Python syntax errors or undefined names
         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
     - name: Test with pytest
       run: |
         pytest
    - name: send Message to Slack
      run: |
#        env:
#          app_token: ${{ secrets.SLACK_APP_TOKEN }}
#          bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
        python sendMessage.py
